buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.3"
    }
}

apply plugin: 'java'
apply plugin: 'io.qameta.allure'

allure {
    version = '2.2.1'
    autoconfigure = true
    aspectjweaver = true
}

repositories {
    mavenCentral()
}

dependencies {
    implementation ('org.testng:testng') { version { strictly '7.0.0' } }
    implementation 'org.seleniumhq.selenium:selenium-java:3.141.59'
    implementation 'org.hamcrest:hamcrest:2.2'
    implementation 'com.beust:jcommander:1.78'
    implementation 'com.thoughtworks.xstream:xstream:1.4.11.1'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'mysql:mysql-connector-java:8.0.19'
    implementation 'org.hibernate:hibernate-core:5.4.11.Final'
    implementation 'io.cucumber:cucumber-java:5.6.0'
    implementation 'io.cucumber:cucumber-testng:5.6.0'
}

task testContacts(type: Test) {
    useTestNG {
        suites 'src/test/resources/testng-contacts.xml'
    }
    if (project.hasProperty("browser")) {
        systemProperty 'browser', "${browser}"
    }
    if (project.hasProperty("platform")) {
        systemProperty 'platform', "${platform}"
    }
    if (project.hasProperty("target")) {
        systemProperty 'target', "${target}"
    }
    if (project.hasProperty("verifyUi")) {
        systemProperty 'verifyUi', "${verifyUi}"
    }
}
task testGroups(type: Test) {
    useTestNG {
        suites 'src/test/resources/testng-groups.xml'
    }
    if (project.hasProperty("browser")) {
        systemProperty 'browser', "${browser}"
    }
    if (project.hasProperty("platform")) {
        systemProperty 'platform', "${platform}"
    }
    if (project.hasProperty("target")) {
        systemProperty 'target', "${target}"
    }
    if (project.hasProperty("verifyUi")) {
        systemProperty 'verifyUi', "${verifyUi}"
    }
}